AWSTemplateFormatVersion: '2010-09-09'
Description: >-
    Template to create a pipeline that uses the SAM CLI to deploy code (CF and Lambda) from Github Enterprise
Parameters:
  StackName:
    Type: String
    Description: Name of the stack that this pipeline will be deploying
    Default: uai3037033-gp-bastionredeploy-prd
  UAI:
    Type: String
    Description: UAI for the pipeline
    Default: uai3037033
  AppName:
    Type: String
    Description: AppName for the pipeline
    Default: BastionRedeploy
  Env:
    Type: String
    Description: Environment for the pipeline
    Default: prd
  ConnectionARN:
    Type: String
    Description: The ARN for the Codestar connection that is connected to our github enterprise
    Default: "arn:aws:codestar-connections:us-east-1:325381443140:connection/c987d9f2-1e0b-441d-979a-ebe30d9bbb0f"
  RepositoryId:
    Type: String
    Description: The ID for the repository the CodeStar connection will use i.e (gp-ops/InstanceScheduling)
    Default: gp-ops/AWSBastionRedeploy
  BranchName:
    Type: String
    Description: The name of the branch this pipeline will be monitoring
    Default: master
  
Resources:
  # BastionKeyPair:
  #   Type: AWS::EC2::KeyPair
  #   Properties: 
  #     KeyName: gp-bastion-redeploy-prd
  #     KeyType: rsa
  #     Tags: 
  #       - Key: "uai"
  #         Value: "uai3037033"
  #       - Key: "appname"
  #         Value: "bastionredeploy"
  #       - Key: "env"
  #         Value: "prd"

  NLBLogBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: uai3037033-gp-bastion-redeploy-nlb-logs
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: uai
          Value: uai3037033
        - Key: appname
          Value: bastionredeploy
        - Key: env
          Value: prd
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: >-
                arn:aws:kms:us-east-1:325381443140:key/f3c028a6-51a1-484e-b2a7-b8794424c5ee
              SSEAlgorithm: 'aws:kms'
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  
  NLBBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NLBLogBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: FULL_ACCESS_TO_OPS_ACCOUNT
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::325381443140:root"
            Action: 
              - s3:Get*
              - s3:List*
            Resource:
              - !Sub "arn:aws:s3:::${NLBLogBucket}/*"
              - !Sub "arn:aws:s3:::${NLBLogBucket}"

          - Sid: ROOT_ACCOUNT_ACCESS
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: s3:*
            Resource:
              - !Sub "arn:aws:s3:::${NLBLogBucket}/*"
              - !Sub "arn:aws:s3:::${NLBLogBucket}"

          - Sid: "ElbAWSAct"
            Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref NLBLogBucket
                - /*
            Principal:
              AWS: "arn:aws:iam::127311923021:root"
          
          - Sid: "ELB_LOG_Delivery"
            Action:
              - 's3:PutObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref NLBLogBucket
                - /*
            Principal:
              Service: "delivery.logs.amazonaws.com"
            Condition:
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"
          
          - Sid: "ELB_LOG_Delivery_Acl"
            Effect: Allow
            Principal:
              Service: "delivery.logs.amazonaws.com"
            Action: s3:GetBucketAcl
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref NLBLogBucket
                - /*

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - PublishRole
          - Arn
      Source:
        BuildSpec: !Sub |
          {
            "version": "0.2",
            "phases": {
              "install": {
                "runtime-versions": {
                  "python": 3.8
                },
                "commands": [
                  "pip install cfn-lint",
                  "pip install aws-sam-cli"
                ]
              },
              "build": {
                "commands": [
                  "sam build",
                  "cfn-lint -t .aws-sam/build/template.yaml",
                  "SAM_PARAMETERS=$(cat ./parameters/${AWS::AccountId}*)",
                  "sam deploy --stack-name ${StackName} --s3-bucket ${PipelineArtifactsBucket} --region ${AWS::Region} --capabilities CAPABILITY_NAMED_IAM --parameter-overrides $SAM_PARAMETERS",
                ]
              }
            }
          }
        Type: CODEPIPELINE
      EncryptionKey:
        Fn::GetAtt:
          - PipelineArtifactsBucketEncryptionKey
          - Arn

  PublishRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      Tags:
        - Key: "uai"
          Value: !Ref UAI
        - Key: "appname"
          Value: !Ref AppName
        - Key: "env"
          Value: !Ref Env


  PublishRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: BuildProject
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: BuildProject
                    - :*
          - Action:
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - codepipeline:*
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: BuildProject
                  - -*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:CreateKey
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey
                - Arn
          - Action:
              - kms:CreateKey
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey
                - Arn
          - Action:
              - cloudformation:*
              - iam:*
              - lambda:*
              - events:*
              - kms:*
              - elasticloadbalancing:*
              - autoscaling:*
              - sns:*
            Effect: Allow
            Resource: '*'
          - Action:
              - cloudformation:*
            Effect: Allow
            Resource: !Sub arn:aws:cloudformation:${AWS::Region}:aws:transform/*
          - Action:
              - iam:GetRole
            Effect: Allow
            Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
          - Action:
              - ec2:*
              - ssm:*
            Effect: Allow
            Resource: '*'
        Version: "2012-10-17"
      PolicyName: PublishRoleDefaultPolicy
      Roles:
        - Ref: PublishRole

  PipelineArtifactsBucketEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
              - kms:GenerateDataKey
              - kms:TagResource
              - kms:UntagResource
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PipelineRole
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PublishRole
                  - Arn
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - PublishRole
                  - Arn
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete


  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - PipelineArtifactsBucketEncryptionKey
                  - Arn
              SSEAlgorithm: aws:kms
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: "uai"
          Value: !Ref UAI
        - Key: "appname"
          Value: !Ref AppName
        - Key: "env"
          Value: !Ref Env
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain


  PipelineArtifactsBucketEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/codepipeline-encryption-key-${AppName}'
      TargetKeyId:
        Fn::GetAtt:
          - PipelineArtifactsBucketEncryptionKey
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: "2012-10-17"

  PipelineRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - PipelineArtifactsBucket
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - PipelineArtifactsBucket
                        - Arn
                    - /*
          - Action:
              - kms:CreateKey
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineArtifactsBucketEncryptionKey
                - Arn
          - Action: codestar-connections:*
            Effect: Allow
            Resource: "*"
          - Action: sts:AssumeRole
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - PipelineBuildCodePipelineActionRole
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineRoleDefaultPolicy
      Roles:
        - Ref: PipelineRole

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::GetAtt:
          - PipelineRole
          - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GithubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref ConnectionARN
                FullRepositoryId: !Ref RepositoryId
                BranchName: !Ref BranchName
              Name: Checkout
              OutputArtifacts:
                - Name: Artifact_Source_Checkout
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildandDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName:
                  Ref: BuildProject
              InputArtifacts:
                - Name: Artifact_Source_Checkout
              OutputArtifacts:
                - Name: BuildOutput
              RoleArn:
                Fn::GetAtt:
                  - PipelineBuildCodePipelineActionRole
                  - Arn
              RunOrder: 1
      ArtifactStore:
        EncryptionKey:
          Id:
            Fn::GetAtt:
              - PipelineArtifactsBucketEncryptionKey
              - Arn
          Type: KMS
        Location:
          Ref: PipelineArtifactsBucket
        Type: S3
    DependsOn:
      - PipelineRoleDefaultPolicy
      - PipelineRole


  PipelineBuildCodePipelineActionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"


  PipelineBuildCodePipelineActionRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
              - codebuild:StopBuild
              - codepipeline:*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - BuildProject
                - Arn
        Version: "2012-10-17"
      PolicyName: PipelineBuildCodePipelineActionRoleDefaultPolicy
      Roles:
        - Ref: PipelineBuildCodePipelineActionRole