AWSTemplateFormatVersion: '2010-09-09'
Description: 'CldOpsAdmin Federated or switch role to OPS Team.
              Template ref: https://github.build.ge.com/gp-ops/global-stack-sets/blob/master/iam-cldsa-admin-setup/templates/iam-ops-role-setup.yml'

Parameters:
  RoleName:
    Type: String
    Description: Name of the admin Role... e.g. 'cldSAAdmin'
    Default: 'cldgpops'
  RolePath:
    Type: String
    Description: Path for the role
    Default: 'hq'
  AdminAccountId:
    Type: String
    MaxLength: 12
    MinLength: 12
    Default: "325381443140"
    Description: 12 digit AWS Account Id of the identity/federation account containing the users to which you're granting access. This is a trusted account.
  MultiFactorAuthRequired:
    Default: "False"
    Type: String
    AllowedValues:
      - "True"
      - "False"

Conditions:
  AdminSetup: !Equals [!Ref AWS::AccountId, '325381443140']
  SwitchSetup: !Not [!Equals [!Ref AWS::AccountId, '325381443140']]
  
Resources:
  OpsdAdminRole:
    Type: 'AWS::IAM::Role'
    Condition: AdminSetup
    Properties:
      RoleName: !Sub bu-pw-${RoleName}-fed
      Path: !Sub /${RolePath}/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - # Allow the role to be assumed from SAML Auth.
            Effect: Allow
            Principal:
              Federated: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:saml-provider/ge-saml-for-aws-mfa
            Action: 'sts:AssumeRoleWithSAML'
            Condition:
              StringEquals:
                'SAML:aud': 'https://signin.aws.amazon.com/saml'
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/GP-Read-Only-Policy"
        - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/common-fed-role"  
        - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/ssm-session-deny"
        - "arn:aws:iam::aws:policy/AWSBackupFullAccess"
      Policies:
        - PolicyName: cldgpopsAssumeRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:

              - Sid: AssumeRole
                Action:
                  - sts:AssumeRole
                Resource:
                  - "arn:aws:iam::*:role/hq/bu-pw-cldgpops-fed"
                Effect: Allow

  FedRole:
    Type: 'AWS::IAM::Role'
    Condition: SwitchSetup
    Properties:
      RoleName: !Sub bu-pw-${RoleName}-fed
      Path: !Sub /${RolePath}/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - # Allow the role to be assumed from Admin account.
            Effect: Allow
            Principal:
              "AWS": !Sub "arn:${AWS::Partition}:iam::${AdminAccountId}:role/hq/bu-pw-cldgpops-fed"
            Action:
              - sts:AssumeRole
            Condition:
              Bool:
                "aws:MultiFactorAuthPresent": !Ref MultiFactorAuthRequired
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/GP-Read-Only-Policy"
        - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/common-fed-role"  
        - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/ssm-session-deny"
        - "arn:aws:iam::aws:policy/AWSBackupFullAccess"

  OPSAdminAccess:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub "${RoleName}-policy"
      Roles:
        'Fn::If':
        - AdminSetup
        - 
          - !Ref OpsdAdminRole
        - 
          - !Ref FedRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: PassRole
            Action:
              - iam:PassRole
            Resource:
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/app/*"
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/lam/*"
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/inf/*"
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*/bu-pw-*-app"
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/hq/bu-pw-cldgpops-fed"
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/*"   
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/*"   
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/AWSDataLifecycleManagerDefaultRole"   
              - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/EMR_DefaultRole"
#               - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*"

            Effect: Allow

          - Sid: EnableAllControls
            Action:
              - a4b:*
              - acm:*
              - apigateway:*
              - application-autoscaling:*
              - appstream:*
              - appmesh:*
              - athena:*
              - autoscaling:*
              - aws-marketplace:*
              - cloud9:*
              - codedeploy:*
              - codepipeline:*
              - codebuild:*
              - codecommit:*
              - config:*
              - cloudformation:*
              - cloudtrail:*
              - cloudfront:*
              - cloudsearch:*
              - cloudwatch:*
              - datapipeline:*
              - dlm:*
              - dms:*
              - dynamodb:*
              - ec2:*
              - ec2-reports:*
              - ecs:*
              - ecr:*
              - elasticfilesystem:*
              - elasticache:*
              - elasticbeanstalk:*
              - elasticloadbalancing:*
              - elasticmapreduce:*
              - es:*
              - events:*
              - execute-api:*
              - glacier:*
              - glue:*
              - inspector:*
              - iam:ListServerCertificates
              - kms:*
              - lambda:*
              - logs:*
              - machinelearning:*
              - opsworks:*
              - opsworks-cm:*
              - quicksight:*
              - rds:*
              - redshift:*
              - resource-groups:*
              - sdb:*
              - s3:*
              - ses:*
              - snowball:*
              - sns:*
              - sqs:*
              - ssm:*
              - secretsmanager:*
              - sagemaker:*
              - sso:GetSSOStatus
              - sso:DescribeRegisteredRegions
              - sts:DecodeAuthorizationMessage'
              - support:*
              - swf:*
              - tag:*
              - trustedadvisor:*
              - waf:*
              - wafv2:*
              - waf-regional:Get*
              - waf-regional:List*
              - xray:*
              - health:*
              - route53:*
              - route53domains:*
              - route53resolver:*
              - states:*
              - servicecatalog:*
              - chatbot:*
              - servicediscovery:*
              - cognito-identity:*
              - cognito-idp:*
              - cognito-sync:*
              - greengrass:*
              - backup:*
            Resource: "*"
            Effect: Allow
            
Outputs:
  AdminOpsFederatedRoleName:
    Condition: AdminSetup
    Value: !Ref OpsdAdminRole
  AdminOpsFederatedRoleArn:
    Condition: AdminSetup
    Value: !GetAtt OpsdAdminRole.Arn

  SwitchOpsFederatedRoleName:
    Condition: SwitchSetup
    Value: !Ref FedRole
  SwitchOpsFederatedRoleArn:
    Condition: SwitchSetup
    Value: !GetAtt FedRole.Arn
