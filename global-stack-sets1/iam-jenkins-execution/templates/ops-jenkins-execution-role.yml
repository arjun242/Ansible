---
AWSTemplateFormatVersion: 2010-09-09
Description: ops Jenkins execution role...

Parameters:
  RoleName:
    Type: String
    Description: Name of the Role... e.g. 'cldSAAdmin'
    Default: ops-jenkins-execution
  RolePath:
    Type: String
    Description: Path for the role
    Default: /inf/
  JenkinsRoleArn:
    Type: String
    Description: Name of the Admin Role...
    Default: 'arn:aws:iam::325381443140:role/inf/ops-master-jenkins'
  ComplianceRoleArn:
    Type: String
    Description: Name of the Admin Role...
    Default: 'arn:aws:iam::523084324983:role/inf/compliance-remediation-role'  

Resources:
  SvcRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${RoleName}'
      Path: !Sub '${RolePath}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref JenkinsRoleArn
                - !Ref ComplianceRoleArn
            Action:
              - sts:AssumeRole
              - sts:TagSession

  SvcPolicyStarAccess:  
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-StarAccess'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "ECR"
            Effect: "Allow"
            Action:
                - ecr:*
            Resource: "*"
          - Sid: "ECS"
            Effect: "Allow"
            Action:
                - ecs:*
            Resource: "*"
          - Sid: "CODEBUILD"
            Effect: "Allow"
            Action:
                - codebuild:*
            Resource: "*"
          - Sid: "EFS"
            Effect: "Allow"
            Action:
                - elasticfilesystem:*
            Resource: "*"
          - Sid: "elasticache"
            Effect: "Allow"
            Action:
                - elasticache:*
            Resource: "*"
          - Sid: "chatbot"
            Effect: "Allow"
            Action:
                - chatbot:*
            Resource: "*"
          - Sid: "codepipeline"
            Effect: "Allow"
            Action:
                - codepipeline:*
            Resource: "*"
          - Sid: "codestar"
            Effect: "Allow"
            Action:
                - codestar:*
                - codestar-connections:*
            Resource: "*"
          - Sid: "cloudformation"
            Effect: "Allow"
            Action:
                - cloudformation:*
            Resource: "*"
          - Sid: "lambda"
            Effect: "Allow"
            Action:
                - lambda:*
            Resource: "*"
          - Sid: "logs"
            Effect: "Allow"
            Action:
                - logs:*
            Resource: "*"
          - Sid: "cloudwatch"
            Effect: "Allow"
            Action:
                - cloudwatch:*
                - events:*
            Resource: "*"
          - Sid: "ssm"
            Effect: "Allow"
            Action:
              - ssm:*
            Resource: "*"
  SvcPolicyAssorted:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-Assorted'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "S3Access"
            Effect: "Allow"
            Action: 
              - s3:List*
              - s3:Get* 
              - s3:Put*
              - s3:CreateBucket
              - s3:RestoreObject
              - s3:ReplicateObject
              - s3:ReplicateDelete
              - s3:AbortMultipartUpload
            Resource: "*"
          
          - Sid: "StepfunctionAccess"
            Effect: "Allow"
            Action:
              - states:DeleteStateMachine
              - states:CreateStateMachine
              - states:CreateActivity
              - states:DescribeActivity
              - states:DescribeStateMachine
              - states:ListStateMachines
              - states:DeleteActivity
              - states:TagResource
            Resource:
            - "*"
            
          - Sid: "BackupAccess"
            Effect: "Allow"
            Action:
              - backup:CreateBackupPlan
              - backup:CreateBackupSelection
              - backup:CreateBackupVault
              - backup:DeleteBackupPlan
              - backup:DeleteBackupSelection
              - backup:DeleteBackupVault
              - backup:DeleteBackupVaultAccessPolicy
              - backup:DeleteBackupVaultNotifications
              - backup:DeleteRecoveryPoint
              - backup:Describe*
              - backup:Get*
              - backup:List*
              - backup:PutBackupVaultAccessPolicy
              - backup:PutBackupVaultNotifications
              - backup:TagResource
              - backup:UntagResource
              - backup:UpdateBackupPlan
              - backup:UpdateRecoveryPointLifecycle
              - backup-storage:MountCapsule
            Resource: "*"
    
  SvcPolicyRDS:  
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-db'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: RDSFullAccess
            Effect: Allow
            Action:
              - rds:AddSourceIdentifierToSubscription
              - rds:AddTagsToResource
              - rds:ApplyPendingMaintenanceAction
              - rds:AuthorizeDBSecurityGroupIngress
              - rds:CopyDBClusterSnapshot
              - rds:CopyDBParameterGroup
              - rds:CopyDBSnapshot
              - rds:CopyOptionGroup
              - rds:CreateDBCluster
              - rds:CreateDBClusterParameterGroup
              - rds:CreateDBClusterSnapshot
              - rds:CreateDBInstance
              - rds:CreateDBInstanceReadReplica
              - rds:CreateDBParameterGroup
              - rds:CreateDBSecurityGroup
              - rds:CreateDBSnapshot
              - rds:CreateDBSubnetGroup
              - rds:CreateEventSubscription
              - rds:CreateOptionGroup
              - rds:DeleteDBCluster
              - rds:DeleteDBClusterParameterGroup
              - rds:DeleteDBClusterSnapshot
              - rds:DeleteDBInstance
              - rds:DeleteDBParameterGroup
              - rds:DeleteDBSecurityGroup
              - rds:DeleteDBSnapshot
              - rds:DeleteDBSubnetGroup
              - rds:DeleteEventSubscription
              - rds:DeleteOptionGroup
              - rds:FailoverDBCluster
              - rds:ModifyDBCluster
              - rds:ModifyDBClusterParameterGroup
              - rds:ModifyDBClusterSnapshotAttribute
              - rds:ModifyDBInstance
              - rds:ModifyDBParameterGroup
              - rds:ModifyDBSnapshotAttribute
              - rds:ModifyDBSubnetGroup
              - rds:ModifyEventSubscription
              - rds:ModifyOptionGroup
              - rds:PromoteReadReplica
              - rds:PromoteReadReplicaDBCluster
              - rds:RebootDBInstance
              - rds:RemoveSourceIdentifierFromSubscription
              - rds:ResetDBClusterParameterGroup
              - rds:ResetDBParameterGroup
              - rds:RestoreDBClusterFromS3
              - rds:RestoreDBClusterFromSnapshot
              - rds:RestoreDBClusterToPointInTime
              - rds:RestoreDBInstanceFromDBSnapshot
              - rds:RemoveTags*
              - rds:Describe*
              - rds:List*
            Resource: "*"
            
          - Sid: DynamodbAccess
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:CreateTable
              - dynamodb:DeleteItem
              - dynamodb:DeleteTable
              - dynamodb:DescribeLimits
              - dynamodb:DescribeReservedCapacity
              - dynamodb:DescribeReservedCapacityOfferings
              - dynamodb:DescribeStream
              - dynamodb:DescribeTable
              - dynamodb:ListStreams
              - dynamodb:ListTables
              - dynamodb:ListTagsOfResource
              - dynamodb:UpdateTable
            Resource: "*"

          - Sid: DMS
            Effect: Allow
            Resource:
              - "*"
            Action:
              - dms:CreateReplicationSubnetGroup   # Does not supports any Tag or Resource policy
              - dms:ModifyReplicationSubnetGroup
              
  SvcPolicyIAM:  
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-IAM'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: IamAccess
            Effect: Allow
            Action:
              - iam:AddRoleToInstanceProfile
              - iam:AddUserToGroup 
              - iam:AttachGroupPolicy
              - iam:AttachRolePolicy 
              - iam:AttachUserPolicy
              - iam:ChangePassword
              - iam:CreateAccessKey
              - iam:CreateAccountAlias
              - iam:CreateGroup
              - iam:CreateInstanceProfile
              - iam:CreatePolicy
              - iam:CreatePolicyVersion
              - iam:CreateRole
              - iam:CreateUser
              - iam:DeleteAccessKey
              - iam:DeleteAccountPasswordPolicy
              - iam:DeleteGroup
              - iam:DeleteGroupPolicy
              - iam:DeleteInstanceProfile
              - iam:DeleteLoginProfile
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DeleteSAMLProvider
              - iam:DeleteServerCertificate
              - iam:DeleteSigningCertificate
              - iam:DeleteUser
              - iam:DeleteUserPolicy
              - iam:DetachGroupPolicy
              - iam:DetachRolePolicy
              - iam:DetachUserPolicy
              - iam:GetAccessKeyLastUsed
              - iam:GetAccountAuthorizationDetails
              - iam:GetAccountPasswordPolicy
              - iam:GetAccountSummary
              - iam:GetContextKeysForCustomPolicy
              - iam:GetContextKeysForPrincipalPolicy
              - iam:GetCredentialReport
              - iam:GetGroup
              - iam:GetGroupPolicy
              - iam:GetInstanceProfile
              - iam:GetLoginProfile
              - iam:GetOpenIDConnectProvider
              - iam:GetPolicy
              - iam:GetPolicyVersion
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:GetSAMLProvider
              - iam:GetSSHPublicKey
              - iam:GetServerCertificate
              - iam:GetServiceLastAccessedDetailsWithEntities
              - iam:GetUser
              - iam:GetUserPolicy
              - iam:ListAccessKeys
              - iam:ListAccountAliases
              - iam:ListAttachedGroupPolicies
              - iam:ListAttachedRolePolicies
              - iam:ListAttachedUserPolicies
              - iam:ListEntitiesForPolicy
              - iam:ListGroupPolicies
              - iam:ListGroups
              - iam:ListGroupsForUser
              - iam:ListInstanceProfiles
              - iam:ListInstanceProfilesForRole
              - iam:ListMFADevices
              - iam:ListOpenIDConnectProviders
              - iam:ListPolicies
              - iam:ListPoliciesGrantingServiceAccess
              - iam:ListPolicyVersions
              - iam:ListRolePolicies
              - iam:ListRoles
              - iam:ListSAMLProviders
              - iam:ListSSHPublicKeys
              - iam:ListServerCertificates
              - iam:ListSigningCertificates
              - iam:ListUserPolicies
              - iam:ListUsers
              - iam:ListVirtualMFADevices
              - iam:PutGroupPolicy
              - iam:PutRolePolicy
              - iam:PutUserPolicy
              - iam:RemoveRoleFromInstanceProfile
              - iam:RemoveUserFromGroup
              - iam:ResyncMFADevice
              - iam:SetDefaultPolicyVersion
              - iam:SimulateCustomPolicy
              - iam:SimulatePrincipalPolicy
              - iam:UpdateAccessKey
              - iam:UpdateAccountPasswordPolicy
              - iam:UpdateAssumeRolePolicy
              - iam:UpdateGroup
              - iam:UpdateLoginProfile
              - iam:UpdateOpenIDConnectProviderThumbprint
              - iam:UpdateSAMLProvider
              - iam:UpdateSSHPublicKey
              - iam:UpdateServerCertificate
              - iam:UpdateSigningCertificate
              - iam:UpdateUser
              - iam:UploadSSHPublicKey
              - iam:UploadServerCertificate
              - iam:UploadSigningCertificate
              - iam:GenerateServiceLastAccessedDetails
              - iam:GetServiceLastAccessedDetails
              - iam:PassRole
              - iam:CreateServiceLinkedRole
              - iam:CreateServiceSpecificCredential
              - iam:DeleteServiceLinkedRole
              - iam:DeleteServiceSpecificCredential
              - iam:GetServiceLinkedRoleDeletionStatus
              - iam:ListServiceSpecificCredentials
              - iam:ResetServiceSpecificCredential
              - iam:UpdateRoleDescription
              - iam:UpdateServiceSpecificCredential
              - iam:TagRole
              - iam:UntagRole
              - iam:ListRoleTags
            Resource: "*"

          - Sid: KMSAccess
            Effect: Allow
            Action:
              - kms:*
            Resource: "*"

          - Sid: AllowLimitedSecretsManager
            Effect: Allow
            Action:
              - secretsmanager:CreateSecret
              - secretsmanager:UpdateSecret
              - secretsmanager:DescribeSecret
              - secretsmanager:ListSecrets
              - secretsmanager:PutSecretValue
              - secretsmanager:GetSecretValue
              - secretsmanager:GetSecretValue
              - secretsmanager:TagResource
              - secretsmanager:DeleteSecret
            Resource: "*"

          - Sid: AllowLimitedACM
            Effect: Allow
            Action: 
              - acm:GetCertificate
              - acm:DescribeCertificate
              - acm:ImportCertificate
              - acm:ListCertificates
              - acm:AddTagsToCertificate
            Resource: "*"

          - Sid: IamCreateServiceLinkedRole
            Effect: Allow
            Action: iam:CreateServiceLinkedRole
            Resource: "*"
            Condition:
              StringEquals:
                'iam:AWSServiceName':
                  - autoscaling.amazonaws.com
                  - ec2scheduled.amazonaws.com
                  - elasticloadbalancing.amazonaws.com
  
  SvcPolicyApiGateway:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-ApiGateway'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "ApiGatewayAccess"
            Effect: "Allow"
            Action:
              - apigateway:GET
              - apigateway:PUT
              - apigateway:DELETE
              - apigateway:PATCH
              - apigateway:POST
            Resource: "*"
  
  SvcPolicyEC2:  
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-EC2'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "elasticloadbalancingFullAccess"
            Effect: "Allow"
            Action:
              - elasticloadbalancing:*
            Resource: "*"
          
          - Sid: "AutoscalingFullAccess"
            Effect: "Allow"
            Action:
              - autoscaling:Describe*
              - autoscaling:AttachInstances
              - autoscaling:AttachLoadBalancers
              - autoscaling:AttachLoadBalancerTargetGroups
              - autoscaling:CreateAutoScalingGroup
              - autoscaling:CreateLaunchConfiguration
              - autoscaling:CreateOrUpdateTags
              - autoscaling:DetachInstances
              - autoscaling:DetachLoadBalancers
              - autoscaling:PutScalingPolicy
              - autoscaling:PutScheduledUpdateGroupAction
              - autoscaling:SetDesiredCapacity
              - autoscaling:SetInstanceHealth
              - autoscaling:SetInstanceProtection
              - autoscaling:TerminateInstanceInAutoScalingGroup
              - autoscaling:UpdateAutoScalingGroup
              - autoscaling:DeleteLaunchConfiguration
            Resource: "*"
          
          - Sid: "Ec2Access"
            Effect: "Allow"
            Action:
              - ec2:AssociateIamInstanceProfile
              - ec2:AttachVolume
              - ec2:AuthorizeSecurityGroupEgress
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateTags
              - ec2:CreateVolume
              - ec2:AllocateAddress
              - ec2:AssignPrivateIpAddresses
              - ec2:AssociateAddress
              - ec2:AssociateRouteTable
              - ec2:AttachNetworkInterface
              - ec2:CopyImage
              - ec2:CopySnapshot
              - ec2:CreateInstanceExportTask
              - ec2:CreateSecurityGroup
              - ec2:DescribeAddresses
              - ec2:DescribeImages
              - ec2:DescribeInstances
              - ec2:DescribeTags
              - ec2:DescribeSubnets
              - ec2:DescribeVolumes
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSnapshots
              - ec2:DeleteSecurityGroup
              - ec2:DeleteTags
              - ec2:DeleteVolume
              - ec2:DetachVolume
              - ec2:ModifyVolumeAttribute
              - ec2:DisassociateIamInstanceProfile
              - ec2:DetachNetworkInterface
              - ec2:DisassociateAddress
              - ec2:UnassignPrivateIpAddresses
              - ec2:GetConsoleScreenshot
              - ec2:RebootInstances
              - ec2:ReplaceIamInstanceProfileAssociation
              - ec2:RevokeSecurityGroupEgress
              - ec2:RevokeSecurityGroupIngress
              - ec2:RunInstances
              - ec2:StartInstances
              - ec2:StopInstances
              - ec2:TerminateInstances
              - ec2:CreateVpcEndpoint*
              - ec2:DeleteVpcEndpoint*
              - ec2:Describe*
              - ec2:ModifyVpcEndpoint*
              - ec2:ModifyInstanceAttribute
              - ec2:DescribeVolumeAttribute
              - ec2:DescribeVolumeStatus
              - ec2:DescribeVolumes
              - ec2:DetachVolume
              - ec2:ModifyVolume
              - ec2:CreateLaunchTemplate
              - ec2:CreateLaunchTemplateVersion
              - ec2:DeleteLaunchTemplate
              - ec2:DeleteLaunchTemplateVersions
              - ec2:DescribeLaunchTemplateVersions
              - ec2:DescribeLaunchTemplates
              - ec2:GetLaunchTemplateData
              - ec2:ModifyLaunchTemplate
            Resource: "*"
          
          - Sid: "ApplicationAutoscalingFullAccess"
            Effect: "Allow"
            Action:
              - application-autoscaling:DeregisterScalableTarget
              - application-autoscaling:DeregisterScalableTarget
              - application-autoscaling:PutScalingPolicy
              - application-autoscaling:RegisterScalableTarget
            Resource: "*"

  SvcPolicyVPC:  
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-VPC'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: VPCAccess
            Effect: Allow
            Action:
              - ec2:AssociateRouteTable
              - ec2:AssociateDhcpOptions
              - ec2:AttachNetworkInterface
              - ec2:AttachInternetGateway
              - ec2:AttachVpnGateway
              - ec2:CreateTags
              - ec2:CreateVpc
              - ec2:CreateSubnet
              - ec2:CreateVpcEndpoint
              - ec2:CreateVpnConnection
              - ec2:CreateFlowLogs
              - ec2:CreateInstanceExportTask
              - ec2:CreateNetworkAcl
              - ec2:CreateNetworkAclEntry
              - ec2:CreateRoute
              - ec2:CreateVpcPeeringConnection
              - ec2:CreateVpcEndpoint
              - ec2:CreateDhcpOptions
              - ec2:CreateNatGateway
              - ec2:AllocateAddress
              - ec2:AssociateAddress
              - ec2:DescribeAddresses
              - ec2:DescribeTags
              - ec2:DescribeNetworkAcls
              - ec2:DescribeSubnets
              - ec2:DescribeDhcpOptions
              - ec2:DescribeHosts
              - ec2:DescribeIdentityIdFormat
              - ec2:DescribeInternetGateways
              - ec2:DescribeFlowLogs
              - ec2:DescribeNatGateways
              - ec2:DescribeNetworkInterfaceAttribute
              - ec2:DescribeRegions
              - ec2:DescribeRouteTables
              - ec2:DescribeVpcClassicLink
              - ec2:DescribeVpcClassicLinkDnsSupport
              - ec2:DescribeVpcAttribute
              - ec2:DescribeVpcs
              - ec2:DescribeVpnConnections
              - ec2:DescribeVpnGateways
              - ec2:DeleteNetworkAclEntry
              - ec2:DeleteRoute
              - ec2:DeleteRouteTable
              - ec2:DeleteVpcPeeringConnection
              - ec2:DeleteCustomerGateway
              - ec2:DeleteDhcpOptions
              - ec2:DeleteInternetGateway
              - ec2:DeleteNetworkAcl
              - ec2:DeleteTags
              - ec2:DeleteVpcEndpoints
              - ec2:DeleteNatGateway
              - ec2:ReleaseAddress
              - ec2:ModifyVpcEndpoint
              - ec2:DetachNetworkInterface
              - ec2:ReplaceNetworkAclEntry
              - ec2:DetachInternetGateway
              - ec2:DisableVgwRoutePropagation
              - ec2:DisableVpcClassicLinkDnsSupport
              - ec2:DetachVpnGateway
              - ec2:DisassociateRouteTable
              - ec2:EnableVgwRoutePropagation
              - ec2:ReplaceNetworkAclAssociation
              - ec2:ReplaceNetworkAclEntry
              - ec2:ReplaceRoute
              - ec2:ReplaceRouteTableAssociation
              - ec2:DisassociateAddress
              - ec2:CreateRouteTable
            Resource: "*"

          - Sid: "S3FullAccessOnCoommon"
            Effect: Allow 
            Action:
              - s3:*
            Resource:
              - "arn:aws:s3:::gp-us-east-ops-automation-common*"
              
  SvcPolicyIOT:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      ManagedPolicyName: !Sub '${RoleName}-IOT'
      Roles:
        - !Ref SvcRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: "IOTAccess"
            Effect: "Allow"
            Action:
              - iot:CreateRoleAlias
              - iot:CreateProvisioningTemplate
            Resource: "*"        
Outputs:
  ServiceRoleName:
    Description: Jenkins cldfrmn Execution Role
    Value: !Ref SvcRole
    Export:
      Name: JenkinsCldfrmnExectionRole
  ServiceRoleNameArn:
    Description: Jenkins cldfrmn Execution Role Arn
    Value: !GetAtt SvcRole.Arn
    Export:
      Name: JenkinsCldfrmnExectionRoleArn
