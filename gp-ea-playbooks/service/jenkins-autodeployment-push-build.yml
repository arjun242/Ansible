- 
  hosts: localhost
  name: "push build jenkins"
  pre_tasks:
     - name: retrieve the sso id from aws secret manager
       shell: aws secretsmanager get-secret-value --region us-east-1 --secret-id automation/ArtifactorySecrets | jq --raw-output '.SecretString' | jq -r .username
       register: user_id

     - name: retrieve the jfrog encrypted password from aws secret manager
       shell: aws secretsmanager get-secret-value --region us-east-1 --secret-id automation/ArtifactorySecrets | jq --raw-output '.SecretString' | jq -r .password
       register: user_pass

     - name: set variable values
       set_fact:
         artifactory_usr: "{{ user_id.stdout }}"
         artifactory_pass: "{{ user_pass.stdout }}"
  tasks:
    -
      name: display the appConfig
      shell: cat /usr/local/etc/appConfig.json
      register: result
    -
      name: save the json data to a variable in a fact
      set_fact:
        jsondata: "{{ result.stdout | from_json }}"
    -
      name: set array
      set_fact:
        json: "{{ jsondata[0] }}"

    # - debug: msg = "{{ jsondata[autoUpdate] }}"
    -
      name: get autoUpdate value
      set_fact:
        auto_Update: "{{ json | json_query(jmesquery) }}"
      vars:
        jmesquery: 'autoUpdate'
    -
      name: set app value
      set_fact:
        app: "{{ module_name }}"
      when: auto_Update == false
    -
     name: get componente
     set_fact:
       components: "{{ json | json_query(jmesquery) }}"
     vars:
       jmesquery: 'components'

    -
      name: "create appConfig directory"
      file:
        path: /usr/local/etc
        state: directory
    -
      name: "create deployment directory"
      file:
        path: /opt/software/deployment
        state: directory
    -
      name: "create app deployment directory"
      file:
        path: "/opt/software/deployment/{{ app }}"
        state: directory


    -
      name: "Iterate loop"
      vars:
        moduel_name: "{{ item.Module_Name }}"
        file_name: "{{ item.File_Name }}"
        build_source: "https://{{ artifactory_usr }}:{{ artifactory_pass }}@artifactory.build.ge.com/SXZZG/Applications/{{ app }}/{{ moduel_name }}/{{ moduel_version }}/{{ file_name }}"
        build_dest: "/opt/software/deployment/{{ app }}/{{ file_name }}"
      get_url:
        url: "{{ build_source }}"
        dest: "{{ build_dest }}"
        owner: root
        group: root
      loop: "{{ components }}"




    # - debug:
      #  var: "{{ item.File_Name }}"
      # loop: "{{ components }}"
    #  ansible-playbook test.yml -e "module_name=elite moduel_version=1515"
