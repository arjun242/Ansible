---
- hosts: localhost
  pre_tasks:
     - name: retrieve the sso id from aws secret manager
       shell: aws secretsmanager get-secret-value --region us-east-1 --secret-id automation/ArtifactorySecrets | jq --raw-output '.SecretString' | jq -r .username
       register: user_id

     - name: retrieve the jfrog encrypted password from aws secret manager
       shell: aws secretsmanager get-secret-value --region us-east-1 --secret-id automation/ArtifactorySecrets | jq --raw-output '.SecretString' | jq -r .password
       register: user_pass

     - name: set variable values
       set_fact:
         artifactory_usr: "{{ user_id.stdout }}"
         artifactory_pass: "{{ user_pass.stdout }}"
  tasks:
    -
      name: display the instanceConfig
      shell: cat /usr/local/etc/instance.json
      register: result
    -
      name: save the json data to a variable in a fact
      set_fact:
        jsondata: "{{ result.stdout | from_json }}"
    -
      name: get app_config_location value
      set_fact:
        app_config_location: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'app_config_location'
    -
      name: "get app value"
      set_fact:
        app_name: "{{ app_info[0] }}"
      vars:
        app_info: "{{ app_config_location.split('/') }}"
    -
      debug:
        msg: "{{ app_name }}"
    -
      name: "create directory"
      file:
        path: "/usr/local/bin"
        state: directory
    -
      name: "set source and destination"
      set_fact:
        dest: "/usr/local/bin/{{ execute_script }}"
        source: "https://{{ artifactory_usr }}:{{ artifactory_pass }}@artifactory.build.ge.com/SXZZG/Applications/{{ app_name }}/autodeploy/{{ execute_script }}"
    -
      name: "download executable file"
      get_url:
        url: "{{ source }}"
        dest: "{{ dest }}"
        owner: root
        group: root
    -
      name: Run a script only if file exists
      ansible.builtin.script: "{{ dest }}"
      args:
        removes: "{{ dest }}"
# ansible-playbook test1.yml -e "execute_script=deploy-app.sh"
