description: Create EBS volume snapshot
schemaVersion: '0.3'
assumeRole: '{{ AutomationAssumeRole }}'
parameters:
  VolumeId:
    type: String
    description: (Required) The ID of the volume.
  Description:
    type: String
    description: (Required) A description for the snapshot
    default: ''
  AutomationAssumeRole:
    type: String
    description: >-
      (Optional) The ARN of the role that allows Automation to perform the
      actions on your behalf. 
    default: ''
  InstanceId:
    type: String
    description: (Required) The Id of the instance
  InstanceType:
    type: String
    description: (Required) The desired instance type
mainSteps:
  - name: createSnapshot
    action: 'aws:executeAwsApi'
    inputs:
      Service: ec2
      Api: CreateSnapshot
      VolumeId: '{{ VolumeId }}'
      Description: '{{ Description }}'
    outputs:
      - Name: Payload
        Selector: SnapshotId
        Type: String
  - name: verifySnapshot
    action: 'aws:waitForAwsResourceProperty'
    timeoutSeconds: 600
    inputs:
      Service: ec2
      Api: DescribeSnapshots
      SnapshotIds:
        - '{{createSnapshot.Payload}}'
      PropertySelector: 'Snapshots[0].State'
      DesiredValues:
        - completed
  - name: UpdateVolumes
    action: 'aws:runCommand'
    maxAttempts: 3
    timeoutSeconds: 360
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds:
        - '{{InstanceId}}'
      Parameters:
        commands:
          - for i in $(blkid -o device)
          - do
          - echo $i
          - y="UUID="$(blkid -s UUID -o value $i)
          - echo $y
          - sed -i "s|$i|$y|g" /etc/fstab
          - done
          - sudo mount -a
  - name: UpdateInstance
    action: 'aws:runCommand'
    maxAttempts: 3
    timeoutSeconds: 360
    onFailure: 'step:stopInstance'
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds:
        - '{{InstanceId}}'
      Parameters:
        commands:
          - yum update -y
  - name: stopInstance
    action: 'aws:changeInstanceState'
    maxAttempts: 3
    timeoutSeconds: 1200
    onFailure: Continue
    inputs:
      InstanceIds:
        - '{{InstanceId}}'
      DesiredState: stopped
  - name: ModifyInstance
    action: 'aws:executeAwsApi'
    inputs:
      Service: ec2
      Api: modify-instance-attribute
      InstanceId: '{{InstanceId}}'
      EnaSupport:
        Value: true
  - name: resizeInstance
    action: 'aws:executeAwsApi'
    inputs:
      Service: EC2
      Api: ModifyInstanceAttribute
      InstanceId: '{{InstanceId}}'
      InstanceType:
        Value: '{{InstanceType}}'
  - name: wait
    action: 'aws:sleep'
    inputs:
      Duration: PT5S
  - name: startInstance
    action: 'aws:changeInstanceState'
    inputs:
      InstanceIds:
        - '{{InstanceId}}'
      DesiredState: running
