##### History
# date  - initials - Description
AWSTemplateFormatVersion: '2010-09-09'
Description: CF Template to create NACL entries for aws endpoints gp-nacl-ep
Parameters: 

  UAI:
    Type: String
    Description: The UAI of the application being managed. UAI starting sequence. MUST be in lowercase.
    ConstraintDescription: The UAI must be valid, but specified as uai in lower case followed by 7 digits
    AllowedPattern: ^uai[0-9]*$
    MinLength: !!int 10
    MaxLength: !!int 10

  EPSubnetCIDR:
    Description: Complete Endpoint subnets CIDR Az1 and Az2 
    Type: String
    AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\/(?:[0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: Must be a valid IP4 CIDR range

  VPCCIDR:
    Description: Complete VPC CIDR Az1 and Az2 
    Type: String
    AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\/(?:[0-9]|[1-2][0-9]|3[0-2]))?$
    ConstraintDescription: Must be a valid IP4 CIDR range

Resources:
  gpnaclEP:
    Type: AWS::EC2::NetworkAcl
    Properties:
      Tags:
      - Key: Name
        Value: {{prefix}}gp-nacl-ep
      - Key: app
        Value: gp-cloud-common
      - Key: uai
        Value: !Ref UAI
      VpcId: !ImportValue {{prefix}}vpcid
  #Inbound 443 for entire VPC 10.231.48.0 - 10.231.49.255
  Ingress1000:
    Properties:
      CidrBlock: 10.231.48.0/23
      Egress: false
      NetworkAclId:
        Ref: gpnaclEP
      PortRange:
        From: 443
        To: 443
      Protocol: 6
      RuleAction: allow
      RuleNumber: 1000
    Type: AWS::EC2::NetworkAclEntry
  #ephemeral ports allow responses to requests
  Ingress1100:
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId:
        Ref: gpnaclEP
      PortRange:
        From: 32768
        To: 65535
      Protocol: 6
      RuleAction: allow
      RuleNumber: 1100
    Type: AWS::EC2::NetworkAclEntry
  #Cross Zone Access EP subnets Az1 and Az2
  Ingress1200:
    Properties:
      CidrBlock: !Ref EPSubnetCIDR
      Egress: false
      NetworkAclId:
        Ref: gpnaclEP      
      Protocol: -1
      RuleAction: allow
      RuleNumber: 1200
    Type: AWS::EC2::NetworkAclEntry
###########Out Bound##############
  #ephemeral ports responses entire VPC 
  Egress1000:
    Properties:
      CidrBlock: !Ref VPCCIDR
      Egress: true
      NetworkAclId:
        Ref: gpnaclEP
      PortRange:
        From: 1024
        To: 65535
      Protocol: 6
      RuleAction: allow
      RuleNumber: 1000
    Type: AWS::EC2::NetworkAclEntry
  #ephemeral ports responses entire VPC
  Egress1100:
    Properties:
      CidrBlock: !Ref VPCCIDR
      Egress: true
      NetworkAclId:
        Ref: gpnaclEP
      PortRange:
        From: 1024
        To: 65535
      Protocol: 17
      RuleAction: allow
      RuleNumber: 1100
    Type: AWS::EC2::NetworkAclEntry
  #Cross Zone Access EP Subnets subnets Az1 and Az2 
  Egress1200:
    Properties:
      CidrBlock: !Ref EPSubnetCIDR
      Egress: true
      NetworkAclId:
        Ref: gpnaclEP      
      Protocol: -1
      RuleAction: allow
      RuleNumber: 1200
    Type: AWS::EC2::NetworkAclEntry

Outputs:
  NaclEndpoint:
    Description: Export NACL ID of Endpoint Subnet   
    Value:
      Ref: gpnaclEP 
    Export: 
      Name: {{prefix}}ep-nacl
