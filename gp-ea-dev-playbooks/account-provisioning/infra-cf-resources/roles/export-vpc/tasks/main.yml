---
- set_stats:
    data:
      to_be_deleted:
        - folder_name: export-defaults
          repo: cft-infra-templates
          message: "Ansible is deleting export-defaults"
          stackNames:
            - "{{prefix}}export-vpc-default"

- name: Get VPC ID
  ec2_vpc_net_info:
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: vpc_info

- name: Get Virtual Private Gateway ID
  ec2_vpc_vgw_info:
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: vgw_info

- name: Get Internet Route Table ID
  ec2_vpc_igw_info:
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: igw_info

- name: Get subnet sn-Internet-AZ1 ID
  ec2_vpc_subnet_info:
    filters:
      "tag:Name": sn-Internet-AZ1
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: sn1

- name: Get subnet sn-Internet-AZ2 ID
  ec2_vpc_subnet_info:
    filters:
      "tag:Name": sn-Internet-AZ2
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: sn2

- name: Get Network Interface ID of ISS-GR-NAT compute
  ec2_instance_info:
    filters:
      "tag:Name": ISS-GR-NAT
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: nat_compute_info

- name: Get Security Group ID of ISS-GR-BIND-VPC-Resolver
  ec2_group_info:
    filters:
      "tag:Name": ISS-GR-BIND-VPC-Resolver
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: vpc_resolver_sg_info

- name: Get Endpoint for S3
  ec2_vpc_endpoint_info:
    query: endpoints
    filters:
      service-name: "com.amazonaws.{{ region }}.s3"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: vpc_s3_endpoint_info

- name: Get app-Rt details
  ec2_vpc_route_table_info:
    filters:
      "tag:Name": rt-Internet
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    region: "{{ region }}"
  register: internet_rt_info

- name: Set account-name and account-id globally
  set_stats:
    data:
      aws_account_name: "{%if vpc_info.vpcs[0].is_default == false %}{{vpc_info.vpcs[0].tags.Name}}{%elif vpc_info.vpcs[1].is_default == false %}{{vpc_info.vpcs[1].tags.Name}}{% endif %}"
      aws_account_id: "{%if vpc_info.vpcs[0].is_default == false %}{{vpc_info.vpcs[0].owner_id}}{%elif vpc_info.vpcs[1].is_default == false %}{{vpc_info.vpcs[1].owner_id}}{% endif %}"

- name: Set facts 
  set_fact:
    vpcID: "{%if vpc_info.vpcs[0].is_default == false %}{{vpc_info.vpcs[0].vpc_id}}{%elif vpc_info.vpcs[1].is_default == false %}{{vpc_info.vpcs[1].vpc_id}}{% endif %}"
    sn1Az: "{{ sn1.subnets[0].availability_zone }}"
    sn1Id: "{{ sn1.subnets[0].subnet_id }}"
    sn2Az: "{{ sn2.subnets[0].availability_zone }}"
    sn2Id: "{{ sn2.subnets[0].subnet_id }}"
    nat_eni_id: "{{ nat_compute_info.instances[0].network_interfaces[0].network_interface_id }}"
    internetRTID: "{{internet_rt_info.route_tables[0].id}}"
    vpcS3EndpointID: "{{vpc_s3_endpoint_info.vpc_endpoints[0].vpc_endpoint_id}}"
    vpcResolverSG: "{{vpc_resolver_sg_info.security_groups[0].group_id}}"
    vpcName: "{%if vpc_info.vpcs[0].is_default == false %}{{vpc_info.vpcs[0].tags.Name}}{%elif vpc_info.vpcs[1].is_default == false %}{{vpc_info.vpcs[1].tags.Name}}{% endif %}"
    vpcGatewayID: "{{vgw_info.virtual_gateways[0].vpn_gateway_id}}"

- name: New folder for export-vpc
  file:
    state: directory
    path: "/tmp/account-automation-folder/export-vpc/"

- name: Render CF template
  template:
    src: export-gr-resources.yml
    dest: "/tmp/account-automation-folder/export-vpc/"

- name: Create export-vpc stack
  cloudformation:
    stack_name: "{{prefix}}export-vpc-default"
    state: "present"
    region: "{{ region }}"
    template: "/tmp/account-automation-folder/export-vpc/export-gr-resources.yml"
    template_parameters:
      VpcID: "{{vpcID}}"
      VPCAlias: "{{vpcName}}"
      AZ1Name: "{{sn1Az}}"
      AZ2Name: "{{sn2Az}}"
      AZ1ID: use1-az6
      AZ2ID: use1-az1
      VPCCidr: "{{ vpcCIDR }}"
      VPCName: "{{vpcName}}"
      VPCGatewayId: "{{vpcGatewayID}}"
      SubnetInternetAZ1: "{{sn1Id}}"
      SubnetInternetAZ2: "{{sn2Id}}"
      NATEniId: "{{nat_eni_id}}"
      VPCResolverSG: "{{vpcResolverSG}}"
      InternetRouteTableID: "{{internetRTID}}"
    aws_access_key: "{{ access_key }}"
    aws_secret_key: "{{ secret_key }}"
    security_token: "{{ session_token }}"
    

- name: Render CFT files
  include_tasks: export-vpc-render.yml

- name: Call Git role
  include_role:
    name: git-push
  vars:
    github_enterprise_repo: cft-infra-templates
    message: "Ansible is creating export-defaults"
    
# - name: Set AZ1ID(Should be got from Survey Vars)

# - name: Set AZ2ID (Should be got from Survey Vars)



