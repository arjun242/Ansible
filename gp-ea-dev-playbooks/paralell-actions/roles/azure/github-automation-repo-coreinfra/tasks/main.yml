---
# Include all required parameters files  
- name: Include vars file
  include_vars: templates-directory.yml

- name: Include secret vars
  include_vars: secret.yml
  no_log: true

- name: Include secret vars
  include_vars: state.yml
  no_log: true
  
# Create project folder to execute within
- name: Create a new directory for parameter files
  file:
    state: directory
    path: "{{source_directory}}/{{resource_folder}}/"

# Pull GitHub Org/Repo codebase into local
- name: Clone the repository to new directory
  git:
    repo: "https://{{sso}}:{{pat}}@github.build.ge.com/gp-ops/gp-jenkins-selfservice"
    dest: "{{source_directory}}/{{resource_folder}}/"
    clone: yes
    recursive: yes
    version: master

# Create SSH Key for new coreinfra repo
- name: Generate SSH key for 'uai3047228-{{ deployment_application_name }}'
  no_log: true
  openssh_keypair:
    path: "{{source_directory}}/{{resource_folder}}/id_rsa"
    size: 2048
    force: True

# Authenticate into managed identity for application builds
- name: Authenticate via mi-ea-appbuilds managed identity, stage environment variables.
  command: "{{ item }}"
  with_items:
  - az login --identity --username ec4d7eec-bf83-465d-a693-8c5e98bd84bd
  - az account set --subscription 9c1ab385-2554-43ca-bdf8-f8d937bf4a28

# Fetch Date Time 364 Days From Today
- name: Fetch Timestamp 364 days in advance
  command: "date -I -d '+12 month'"
  register: datestamp

# Write .pem to secrets vault
- name: Deploy newly created private key to kv-328-uai3047228-common secrets vault
  command: "{{ item }}"
  with_items:
    - az keyvault secret set --name '{{deployment_sub_code}}-gecloud-privatekey' --vault-name 'kv-ea-centralized' --file '{{source_directory}}/{{resource_folder}}/id_rsa' --expires {{ datestamp.stdout }}

# Write statefile from parameters into local filesystem
- name: Generate python state file
  template:
    src: "state.json"
    dest: "{{source_directory}}/{{resource_folder}}/state.json"
    
# Invoke GitHub Scripts & Show output to the screen
- name: Invoke GitHub Org Script
  command: "python3 {{source_directory}}/{{resource_folder}}/git-org-scripts/src/main.py --host 'ansible' --cloud 'azure'"
  register: output

# Display terraform output to the screen 
- name: Display Script Output to Screen
  debug: "{{ output.stdout }}"

# Clone newly created repository into local directory
- name: Clone the repository to new directory
  git:
    repo: "https://{{sso}}:{{pat}}@github.build.ge.com/{{deployment_subscription_name}}/uai3047228-{{ deployment_application_name }}"
    dest: "{{source_directory}}/{{resource_folder}}/uai3047228-{{ deployment_application_name }}"
    clone: yes
    recursive: yes
    version: master

# Copy id_rsa.pub key from above to target directory .ssh folder
- name: Copy id_rsa.pub key from above to target directory .ssh folder
  copy:
    src: "{{source_directory}}/{{resource_folder}}/id_rsa.pub"
    dest: "{{source_directory}}/{{resource_folder}}/uai3047228-{{ deployment_application_name }}/.ssh/id_rsa.pub"
    force: yes
    remote_src: yes

# Commit newly created/copied file to remote github
# Write .pem to secrets vault
- name: Commit newly created/copied file to remote github
  command: "{{ item }}"
  args:
    chdir: "{{source_directory}}/{{resource_folder}}/uai3047228-{{ deployment_application_name }}"
  with_items:
    - git config --global user.email '502813500@ge.com'
    - git config --global user.name 'github-functional-sso'
    - git checkout -b uai3047228-{{ deployment_application_name }}
    - git add {{source_directory}}/{{resource_folder}}/uai3047228-{{ deployment_application_name }}/.ssh/id_rsa.pub
    - git commit -m 'Committing newly created id_rsa.pub file for subscription - {{ deployment_subscription_name }}'
    - git push origin uai3047228-{{ deployment_application_name }}

#Delete project repository
- name: Delete directory for parameter file
  file:
   state: absent
   path: "{{source_directory}}/{{resource_folder}}/"